version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpass007
      POSTGRES_DB: heartbeats
    ports:
      - "5432:5432"
    volumes:
      - ./kafka_client/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres
    networks:
      - app-network

  producer:
    build:
      context: ./kafka_client
      dockerfile: Dockerfile
    command: python producer.py
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./kafka_client:/app
    networks:
      - app-network

  consumer:
    build:
      context: ./kafka_client
      dockerfile: Dockerfile
    command: python consumer.py
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpass007
      POSTGRES_DB: heartbeats
    volumes:
      - ./kafka_client:/app
    networks:
      - app-network

volumes:
  grafana_data:
    driver: local

networks:
  app-network:
    driver: bridge
